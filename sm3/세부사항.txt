1. 가장 먼저 roi를 통해 유효한 영역을 잡아주세요.

2. 각 객체의 좌표를 잡습니다.
	좌표를 잡을 때에는 픽셀 좌표를 기준으로 잡으시는게 편하실 거예요
	좌표로 잡아야 하는 목록은 파란색의 화물의 좌표와 로봇의 좌표를 얻어주세요
	좌표를 찾으실때는 numpy.where함수를 쓰시는 것이 속도면에서나 사용법에서나 유리합니다.
	https://pinkwink.kr/1236 참고하셔서(다른 글 찾으셔도 됩니다.) numpy.where함수 공부하신 뒤
	특정 rgb에 대한 좌표값들을 전부 얻어오고, 그 좌표값들의 평균을 구하면 좌표가 될 것 같습니다.

3. 우선 로봇을 가장 가까운 정좌표로 이동시켜 주세요
	정좌표는 로봇이 각 행렬칸의 정 중앙에 있게 되는 좌표를 이야기합니다.
	정좌표는 roi로 얻으신 영역의 넓이와 높이로부터 구하실 수 있어요
	이때 정좌표의 목록을 구하고 리스트로 저장한 후, 피타고라스 삼각법칙 이용하시면 가장 가까운 좌표를 구하실 수 있습니다.
	그 좌표로 이동하도록 action리스트 변경하시고 step 밟아주시며 이동하시면 되세요.
	로봇의 좌표값을 업데이트 하실 때에는 이미지로부터 구하셔야 합니다. 

4. 로봇을 목표 행렬칸으로 이동시키고 목표 좌표를 초기화 해주세요
	move_target에 따라 로봇을 목표 행렬칸으로 이동시키고 목표 행렬칸을 초기화 시킵니다.


다 끝나시면 바로 연락주세요.

	- 파란색 화물이 정좌표에 있지 않을 때, 로봇을 이용해서 정좌표로 미는 함수
	- 로봇이 회전되는 것을 처리하면서 이동시키는 함수(일부러 회전시키지는 않지만 움직이면 조금씩 돌꺼예요)
	- 기타 등등

	짤 건데 이건 다 했다고 연락주시면 시뮬레이터를 업데이트해서 드리겠습니다.
	로봇 도착해도 솔봄씨가 함수짜는데 시간이 필요하기 때문에 우선 시뮬레이터로 할 듯합니다.

추후 편의성을 위해 코드를 구성하실 때는 다음과 같이 구성해주세요
while 1:
	이미지 받아오는 코드
	roi 이미지 처리
	normal_pos_list = roi로부터 정위치를 얻는 함수
	robot_pos, blue_box_pos = 좌표를 얻는 함수

	movemode = 좌표 리스트로부터 로봇이 정 위치인지 아닌지 리턴하는 함수
	
	if movemode == 0:
		action = 로봇이 정위치로 움직이는 action을 리턴하는 함수
	
	if movemode == 1:
		break
	
	시뮬레이터에 action 보내는 코드

move_target = [0, 1, 0, 0]
while 1:
	이미지 받아오는 코드
	roi 이미지 처리
	normal_pos_list = roi로부터 정위치를 얻는 함수
	robot_pos, blue_box_pos = 좌표를 얻는 함수

	IS_Valid_move_target = move_target이 모두 0인지 아닌지 검사하는 함수
	
	if IS_Valid_move_target == False:
		action, move_taget = 로봇이 다음 목표로 이동하게끔하는 함수
	else:
		break	
	
	시뮬레이터에 action 보내는 코드
		
다른 방식 생각나시면 말해주세요